$icon-font-path: "../bower_components/bootstrap-sass-official/assets/fonts/bootstrap/";
// bower:scss
@import "bootstrap-sass-official/assets/stylesheets/_bootstrap.scss";
// endbower

@import "_functions";

$width: 400px;
$tile-count: 4;         // The number of tiles per row/column
$tile-padding: 15px;
$tile-radius: 3px;

//$game-background: #bbada0;
//$game-container-background: #bbada0;
$colors:  #EEE4DA, // 2
          #EAE0C8, // 4
          #F59563, // 8
          #3399ff, // 16
          #ffa333, // 32
          #cef030, // 64
          #E8D8CE, // 128
          #990303, // 256
          #6BA5DE, // 512
          #DCAD60, // 1024
          #B60022; // 2048


//@mixin game-board($tile-count: 4) {
  $tile-size: ($width - $tile-padding * ($tile-count + 1)) / $tile-count;
  #game {
    position: relative;
    width: $width;
    height: $width; // The gameboard is a square
    background-color: #bbada0;
    border-radius: 6px;


    .grid-container {
      position: absolute; // the grid is absolutely positioned
      z-index: 1; // IMPORTANT to set the z-index for layering
      margin: 0 auto; // center
      width: $width;
      height: $width;


      .grid-cell {
        width: $tile-size; // set the cell width
        height: $tile-size; // set the cell height
        margin-bottom: $tile-padding; // the padding between lower cells
        margin-right: $tile-padding; // the padding between the right cell

      }
    }
    .tile-container {
      position: absolute;
      z-index: 2;
      height: $width;
      width: $width;


      .tile {
        width: $tile-size; // tile width
//        height: $tile-size; // tile height
//        font-size: 40px;
        color: white;
        text-align: center;

        line-height: $tile-size;
//        @include border-radius($tile-radius);
//        border: 1px solid blue;

        // Dynamically create .position-#{x}-#{y} classes to mark
        // where each tile will be placed
        @for $x from 1 through $tile-count {
          @for $y from 1 through $tile-count {
            $zeroOffsetX: $x - 1;
            $zeroOffsetY: $y - 1;
            $newX: ($tile-size) * ($zeroOffsetX) + ($tile-padding * $zeroOffsetX);
            $newY: ($tile-size) * ($zeroOffsetY) + ($tile-padding * $zeroOffsetY);

            &.position-#{$zeroOffsetX}-#{$zeroOffsetY} {
              -webkit-transform: translate($newX, $newY);
              transform: translate($newX, $newY);
            }
          }
        }

        @for $i from 1 through length($colors) {
          &.tile-#{power(2, $i)} .tile-inner {
            background: nth($colors, $i)
          }
        }

      }
    }
  }
